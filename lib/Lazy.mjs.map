{"version":3,"file":"Lazy.mjs","sources":["../src/Lazy.js"],"sourcesContent":["(function() {\n  class Lazy {\n    constructor(direction='all') {\n      this.direction = direction\n      this.district = {\n        lastY: 0,\n        lastX: 0,\n        height: 0,\n        width: 0\n      }\n      this.extend = 0\n      this.attr = 'lazy-img'\n      this.elements = []\n      this.interval = []\n      this.listeners = []\n    }\n    setup({y=window.scrollY,x=window.scrollX,h=window.innerHeight,w=window.innerWidth,extend=100,attr='lazy-img'}) {\n      const district = this.district\n      district.lastY = y\n      district.lastX = x\n      district.width = w\n      district.height = h\n      this.attr = attr\n      this.extend = extend\n      this.popularElements()\n    }\n    popularElements() {\n      this.elements = []\n      document.querySelectorAll(`[${this.attr}]`).forEach(this.addElements, this)\n    }\n    addElements(el) {\n      if (!(el.attributes[this.attr] && el.attributes[this.attr].value)) {\n        console.error(`Lazy err: ${el} dont have attribute ${this.attr}`)\n        return \n      }\n      const { top, bottom, left, right } = el.getBoundingClientRect()\n      const district = this.district\n      const location = { \n        top: top + district.lastY,\n        bottom: bottom + district.lastY,\n        left: left + district.lastX,\n        right: right + district.lastX\n      }\n      const o = { el, location }\n      this.elements.push(o)\n      this.loadImage(o)\n    }\n    loadImage(o) {\n      const location = o.location\n      if (!o.isLoad && this.direction === 'all' && this.judgeRow(location) && this.judgeColumn(location)) {\n        this.load(o) \n        return\n      }\n      if (!o.isLoad && this.direction === 'row' && this.judgeRow(location)) {\n        this.load(o)\n        return\n      }\n      if (!o.isLoad && this.direction === 'column' && this.judgeColumn(location)) {\n        this.load(o) \n        return\n      }\n    }\n    load(o) {\n      const el = o.el\n      el.src = el.attributes[this.attr].value\n      el.attributes.removeNamedItem(this.attr)\n      o.isLoad = true \n    }\n    update({y, x}) {\n      if (y !== undefined) {\n        this.district.lastY = y\n      }\n      if (x !== undefined) {\n        this.district.lastX = x\n      }\n      this.elements.forEach(this.loadImage, this)\n    }\n    removeListener(listener) {\n      if (listener && listener.event && listener.fn) {\n        listener.el.removeEventListener(listener.event, listener.fn)\n        listener.isWork = false\n      }\n    }\n    removeInterval(interval) {\n      const i = this.interval.find(inter => inter.fn === interval.fn)\n      if (i > -1) {\n        this.interval.splice(i, 1)\n      }\n    }\n    removeElement(el) {\n      const i = this.elements.find(o => o.el === el)\n      if (i > -1) {\n        this.elements.splice(i, 1)\n      }\n    }\n    destory() {\n      for (var _i=0;_i<this.listeners.length ; _i++) {\n        this.removeListener(this.listeners[_i])\n      }\n      this.elements = null\n      this.listeners = null\n      this.interval = null\n    }\n    // add interval\n    lift(interval) {\n      if (interval && interval.fn && interval.num) {\n        this.interval.push({\n          fn: interval.fn,\n          lastValue: interval.fn(),\n          intervalNum: interval.num\n        })\n      }\n      return this\n    }\n    // start for or\n    startO({el=document, event='scroll'}) {\n      const lazy = this\n      const func = function() {\n        let current = []\n        const int = lazy.interval\n        let activate = false\n        if (int.length === 0) {\n          activate = true\n        }\n        for (var _i=0; _i< int.length; _i++) {\n          const cur = int[_i].fn()\n          current[_i] = cur\n          activate = activate || Math.abs(cur - int[_i].lastValue) >= int[_i].intervalNum\n        }\n        if (activate) {\n          for (var i_=0; i_< int.length;i_++) {\n            int[i_].lastValue = current[i_]\n          }\n          lazy.update({\n            y: window.scrollY,\n            x: window.scrollX\n          })\n        }\n      }\n      el.addEventListener(event, func)\n      const listener = {\n        fn: func,\n        event: event,\n        el: el,\n        isWork: true\n      }\n      lazy.listeners.push(listener)\n      return function() {\n        return lazy.removeListener(listener)\n      }\n    }\n    // start for and\n    start({el=document, event='scroll'}) {\n      const lazy = this\n      const func = function() {\n        let current = []\n        const int = lazy.interval\n        let activate = true\n        for (var _i=0; _i< int.length; _i++) {\n          const cur = int[_i].fn()\n          current[_i] = cur\n          activate = activate && Math.abs(cur - int[_i].lastValue) >= int[_i].intervalNum\n        }\n        if (activate) {\n          for (var i_=0; i_< int.length;i_++) {\n            int[i_].lastValue = current[i_]\n          }\n          lazy.update({\n            y: window.scrollY,\n            x: window.scrollX\n          })\n        }\n      }\n      el.addEventListener(event, func)\n      const listener = {\n        fn: func,\n        event: event,\n        el: el,\n        isWork: true\n      }\n      lazy.listeners.push(listener)\n      return function() {\n        return lazy.removeListener(listener)\n      }\n    }\n    judgeRow(location) {\n      const district = this.district\n      return district.lastX >= location.left - district.width - this.extend && district.lastX <= location.right + this.extend\n    }\n    judgeColumn(location) {\n      const district = this.district\n      return district.lastY >= location.top - district.height - this.extend && district.lastY <= location.bottom + this.extend\n    }\n  }\n  Lazy.create = function (payload = {extend:100,attr:'lazy-img'}) {\n    const lazy = new Lazy()\n    lazy.setup(payload)\n    return lazy\n  }\n  if (typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n    module.exports = Lazy;\n  } else {\n    window.Lazy = Lazy\n  }\n})()"],"names":["Lazy","constructor","direction","district","extend","attr","elements","interval","listeners","setup","ref","window","scrollY","scrollX","innerHeight","innerWidth","this","lastY","y","lastX","x","width","w","height","h","popularElements","document","querySelectorAll","forEach","addElements","el","attributes","value","getBoundingClientRect","o","top","bottom","left","right","push","loadImage","console","error","location","isLoad","judgeRow","judgeColumn","load","src","removeNamedItem","update","undefined","removeListener","listener","event","fn","removeEventListener","isWork","removeInterval","i","find","inter","splice","removeElement","destory","_i","length","lift","num","lastValue","intervalNum","startO","lazy","func","current","int","activate","cur","Math","abs","i_","addEventListener","start","create","payload","module","exports"],"mappings":"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"}